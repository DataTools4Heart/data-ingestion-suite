{
  "id" : "encounter-mapping",
  "url" : "https://datatools4heart.eu/fhir/mappings/gem/encounter-mapping",
  "name" : "encounter-mapping",
  "title" : "Mapping of GEM's elenco_contatti table to DT4H Encounter FHIR profile",
  "isDraft" : false,
  "source" : [ {
    "alias" : "encounterMain",
    "url" : "https://datatools4heart.eu/fhir/schemas/gem/encounter",
    "joinOn" : [ "CODICE_SANITARIO" ]
  }, {
    "alias" : "encounterDetails",
    "url" : "https://datatools4heart.eu/fhir/schemas/gem/encounter-details",
    "joinOn" : [ "CODICE_SANITARIO" ]
  } ],
  "context" : {
    "icd9toIcd10CM" : {
      "category" : "concept-map",
      "url" : "$CONTEXT_REPO/gem/icd9cm-to-icd10cm.csv"
    },
    "encounterClassConceptMap" : {
      "category" : "concept-map",
      "url" : "$CONTEXT_REPO/gem/encounter-class-concept-map.csv"
    }
  },
  "variable" : [ {
    "name" : "relatedEncounter",
    "language" : "text/fhirpath",
    "expression" : "%encounterDetails.where(%context.DATA_IN.toDate() <= DATA_RICOVERO.toDate() and %context.DATA_OUT.toDate() >= DATA_DIMISSIONE.toDate()).first()"
  }, {
    "name" : "dischargeDate",
    "language" : "text/fhirpath",
    "expression" : "(DATA_OUT & iif(ORA_OUT.exists(), ORA_OUT) )"
  } ],
  "mapping" : [ {
    "precondition" : {
      "name" : "encounterIdExists",
      "language" : "text/fhirpath",
      "expression" : " NOSOGRAFICO.exists() "
    },
    "expression" : {
      "name" : "result",
      "language" : "application/fhir-template+json",
      "value" : {
        "id" : "{{mpp:getHashedId('Encounter', NOSOGRAFICO)}}",
        "meta" : {
          "source" : "{{%sourceSystem.sourceUri}}",
          "profile" : [ "https://datatools4heart.eu/fhir/StructureDefinition/HFR-Encounter" ]
        },
        "resourceType" : "Encounter",
        "class" : [ {
          "coding" : [ {
            "system" : "http://terminology.hl7.org/CodeSystem/v3-ActCode",
            "code" : "{{mpp:getConcept(%encounterClassConceptMap, D_EVENTO, 'target_code')}}",
            "display" : "{{mpp:getConcept(%encounterClassConceptMap, D_EVENTO, 'target_display')}}"
          } ]
        } ],
        "subject" : "{{mpp:createFhirReferenceWithHashedId('Patient', CODICE_SANITARIO)}}",
        "actualPeriod" : {
          "start" : "{{(DATA_IN & iif(ORA_IN.exists(), ORA_IN) ).utl:toFhirDateTime('yyyy-MM-ddHH:mm:ss' | 'yyyy-MM-dd')}}",
          "end" : "{{? iif(%dischargeDate = '', {}, %dischargeDate.utl:toFhirDateTime('yyyy-MM-ddHH:mm:ss' | 'yyyy-MM-dd')) }}"
        },
        "status" : "completed",
        "reason" : {
          "{{#diagCodeIcd9}}" : "{{ %relatedEncounter.DIAG1_ICD9CM | %relatedEncounter.DIAG2_ICD9CM | %relatedEncounter.DIAG3_ICD9CM | %relatedEncounter.DIAG4_ICD9CM | %relatedEncounter.DIAG5_ICD9CM | %relatedEncounter.DIAG6_ICD9CM | %relatedEncounter.DIAG7_ICD9CM }}",
          "{{*}}" : {
            "value" : [ {
              "concept" : {
                "coding" : {
                  "{{#icd10Object}}" : "{{ mpp:getConcept(%icd9toIcd10CM, %diagCodeIcd9.toString().replace('.', '')) }}",
                  "{{*}}" : {
                    "system" : "{{%icd10Object.target_system}}",
                    "code" : "{{%icd10Object.target_code}}"
                  }
                }
              }
            } ]
          }
        }
      }
    }
  } ]
}