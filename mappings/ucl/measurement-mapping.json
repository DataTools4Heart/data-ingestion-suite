{
  "id" : "measurement-mapping",
  "url" : "https://datatools4heart.eu/fhir/mappings/ucl/measurement-mapping",
  "name" : "measurement-mapping",
  "title" : "Mapping of OMOP measurement to several DT4H profiles",
  "isDraft" : false,
  "source" : [ {
    "alias" : "omopMeasurement",
    "url" : "https://www.ucl.ac.uk/fhir/StructureDefinition/OMOP-Measurement",
    "joinOn" : [ "person_id" ]
  }, {
    "alias" : "omopVisit",
    "url" : "https://www.ucl.ac.uk/fhir/StructureDefinition/OMOP-VisitOccurrence",
    "joinOn" : [ "person_id" ]
  } ],
  "context" : {
    "vitalSignMap" : {
      "category" : "concept-map",
      "url" : "$CONTEXT_REPO/ucl/vital-sign-concept-map.csv"
    },
    "labMap" : {
      "category" : "concept-map",
      "url" : "$CONTEXT_REPO/ucl/lab-concept-map.csv"
    },
    "echoMap" : {
      "category" : "concept-map",
      "url" : "$CONTEXT_REPO/ucl/echo-concept-map.csv"
    }
  },
  "variable" : [ {
    "name" : "convertedVitalSign",
    "language" : "text/fhirpath",
    "expression" : "mpp:getConcept(%vitalSignMap, measurement_concept_id.toString())"
  }, {
    "name" : "convertedLab",
    "language" : "text/fhirpath",
    "expression" : "mpp:getConcept(%labMap, measurement_concept_id.toString())"
  }, {
    "name" : "convertedEcho",
    "language" : "text/fhirpath",
    "expression" : "mpp:getConcept(%echoMap, measurement_concept_id.toString())"
  } ],
  "mapping" : [ {
    "description" : "Mapping of OMOP measurement to DT4H Vital Sign profile",
    "precondition" : {
      "name" : "isVitalSign",
      "language" : "text/fhirpath",
      "expression" : "value_as_number.exists() and measurement_concept_id.exists($this != 0) and %convertedVitalSign.exists() and %convertedVitalSign.target_unit.exists($this != '')"
    },
    "expression" : {
      "name" : "vitalSigns",
      "language" : "application/fhir-template+json",
      "value" : {
        "id" : "{{mpp:getHashedId('Observation', measurement_id.toString())}}",
        "meta" : {
          "profile" : [ "https://datatools4heart.eu/fhir/StructureDefinition/HFR-VitalSign" ]
        },
        "resourceType" : "Observation",
        "category" : [ {
          "coding" : [ {
            "system" : "http://terminology.hl7.org/CodeSystem/observation-category",
            "code" : "vital-signs",
            "display" : "Vital Signs"
          } ]
        } ],
        "code" : {
          "coding" : [ {
            "{{#loincCoding}}" : "{{%convertedVitalSign}}",
            "{{*}}" : {
              "system" : "http://loinc.org",
              "code" : "{{%loincCoding.target_code}}",
              "display" : "{{? %loincCoding.target_display}}"
            },
            "@sliceName" : "loincCode"
          } ]
        },
        "effectiveDateTime" : "{{iif(measurement_datetime.empty(),measurement_date,measurement_datetime.utl:toFhirDateTime('yyyy-MM-dd HH:mm:ss'))}}",
        "valueQuantity" : "{{mpp:convertAndReturnQuantity(%vitalSignMap, measurement_concept_id.toString() , value_as_number, unit_concept_id.toString())}}",
        "subject" : "{{mpp:createFhirReferenceWithHashedId('Patient', person_id.toString())}}",
        "encounter" : "{{? iif(visit_occurrence_id.exists(), mpp:createFhirReferenceWithHashedId('Encounter', visit_occurrence_id.toString()), %omopVisit.select(iif($this.visit_start_date <= %context.measurement_date and $this.visit_end_date >= %context.measurement_date,mpp:createFhirReferenceWithHashedId('Encounter', $this.visit_occurrence_id.toString()),{})).first())}}",
        "status" : "final"
      }
    }
  }, {
    "description" : "Mapping from OMOP Measurement to the DT4H LabResult profile",
    "precondition" : {
      "name" : "isLabResult",
      "language" : "text/fhirpath",
      "expression" : "value_as_number.exists() and measurement_concept_id.exists($this != 0) and %convertedLab.exists() and %convertedLab.target_unit.exists($this != '')"
    },
    "expression" : {
      "name" : "labResults",
      "language" : "application/fhir-template+json",
      "value" : {
        "id" : "{{mpp:getHashedId('Observation', measurement_id.toString())}}",
        "meta" : {
          "source" : "{{%sourceSystem.sourceUri}}",
          "profile" : [ "https://datatools4heart.eu/fhir/StructureDefinition/HFR-LabResult" ]
        },
        "resourceType" : "Observation",
        "status" : "final",
        "category" : [ {
          "coding" : [ {
            "system" : "http://terminology.hl7.org/CodeSystem/observation-category",
            "code" : "laboratory",
            "display" : "Laboratory"
          } ]
        } ],
        "code" : {
          "coding" : [ {
            "{{#loincCoding}}" : "{{%convertedLab}}",
            "{{*}}" : {
              "system" : "http://loinc.org",
              "code" : "{{%loincCoding.target_code}}",
              "display" : "{{%loincCoding.target_display}}"
            },
            "@sliceName" : "loincCode"
          } ]
        },
        "effectiveDateTime" : "{{iif(measurement_datetime.empty(), measurement_date, measurement_datetime.utl:toFhirDateTime('yyyy-MM-dd HH:mm:ss'))}}",
        "valueQuantity" : "{{mpp:convertAndReturnQuantity(%labMap, measurement_concept_id.toString(), value_as_number, unit_concept_id.toString())}}",
        "subject" : "{{mpp:createFhirReferenceWithHashedId('Patient', person_id.toString())}}",
        "encounter" : "{{? iif(visit_occurrence_id.exists(), mpp:createFhirReferenceWithHashedId('Encounter', visit_occurrence_id.toString()), %omopVisit.select(iif($this.visit_start_date <= %context.measurement_date and $this.visit_end_date >= %context.measurement_date,mpp:createFhirReferenceWithHashedId('Encounter', $this.visit_occurrence_id.toString()),{})).first())}}"
      }
    }
  }, {
    "description" : "Mapping OMOP Measurement to the DT4H Echocardiograph profile, not grouping them by measurement event currently",
    "precondition" : {
      "name" : "isEcho",
      "language" : "text/fhirpath",
      "expression" : "value_as_number.exists() and measurement_concept_id.exists($this != 0) and %convertedEcho.exists() and %convertedEcho.target_unit.exists($this != '')"
    },
    "expression" : {
      "name" : "echo",
      "language" : "application/fhir-template+json",
      "value" : {
        "id" : "{{mpp:getHashedId('Observation', measurement_id.toString())}}",
        "meta" : {
          "profile" : [ "https://datatools4heart.eu/fhir/StructureDefinition/HFR-Echocardiograph" ]
        },
        "resourceType" : "Observation",
        "category" : [ {
          "coding" : [ {
            "system" : "http://terminology.hl7.org/CodeSystem/observation-category",
            "code" : "imaging",
            "display" : "Imaging"
          } ]
        } ],
        "code" : {
          "coding" : [ {
            "system" : "http://loinc.org",
            "code" : "34552-0",
            "display" : "Cardiac 2D echo panel",
            "@sliceName" : "loincCode"
          } ]
        },
        "effectiveDateTime" : "{{iif(measurement_datetime.empty(),measurement_date,measurement_datetime.utl:toFhirDateTime('yyyy-MM-dd HH:mm:ss'))}}",
        "component" : [ {
          "code" : {
            "coding" : [ {
              "{{#loincCoding}}" : "{{%convertedEcho}}",
              "{{*}}" : {
                "system" : "http://loinc.org",
                "code" : "{{%loincCoding.target_code}}",
                "display" : "{{? %loincCoding.target_display}}"
              },
              "@sliceName" : "loincCode"
            } ]
          },
          "valueQuantity" : "{{mpp:convertAndReturnQuantity(%echoMap, measurement_concept_id.toString(), value_as_number, unit_concept_id.toString())}}",
          "@sliceName" : "echoParameter"
        } ],
        "subject" : "{{mpp:createFhirReferenceWithHashedId('Patient', person_id.toString())}}",
        "encounter" : "{{? iif(visit_occurrence_id.exists(), mpp:createFhirReferenceWithHashedId('Encounter', visit_occurrence_id.toString()), %omopVisit.select(iif($this.visit_start_date <= %context.measurement_date and $this.visit_end_date >= %context.measurement_date,mpp:createFhirReferenceWithHashedId('Encounter', $this.visit_occurrence_id.toString()),{})).first())}}",
        "status" : "final"
      }
    }
  } ]
}