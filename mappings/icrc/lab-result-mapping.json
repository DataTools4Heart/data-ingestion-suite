{
  "id": "icrc-lab-result-mapping",
  "url": "https://datatools4heart.eu/fhir/mappings/icrc/lab-result-mapping",
  "name": "lab-result-mapping",
  "title": "Mapping of icrc lab results to DT4H Lab Result FHIR profile",
  "source": [{
    "alias": "source",
    "url": "https://datatools4heart.eu/icrc/LabResult"
  }],
  "context": {
    "labResultUnitConversion": {
      "category": "unit-conversion",
      "url": "./lab-results-unit-conversion.csv"
    },
    "labResultCodes": {
      "category": "concept-map",
      "url": "./lab-result-codes.csv"
    }
  },
  "mapping": [
    {
      "precondition": {
        "name": "codeExistsInDT4HLabResultCodes",
        "language": "text/fhirpath",
        "expression": "mpp:getConcept(%labResultCodes, code).exists()"
      },
      "expression": {
        "name": "result",
        "language": "application/fhir-template+json",
        "value": {
          "resourceType": "Observation",
          "id": "{{mpp:getHashedId('Observation', subject.toString() + encounter.toString() + code.toString() + effective_date.toString())}}",
          "meta": {
            "profile": ["https://datatools4heart.eu/fhir/StructureDefinition/DT4H-LabResult"],
            "source": "{{%sourceSystem.sourceUri}}"
          },
          "status": "final",
          "category": [
            {
              "coding": [
                {
                  "system": "http://terminology.hl7.org/CodeSystem/observation-category",
                  "code": "laboratory"
                }
              ]
            }
          ],
          "code": {
            "coding": [
              {
                "system": "http://loinc.org",
                "code": "{{code}}",
                "display": "{{? long_common_name}}"
              }
            ]
          },
          "subject": "{{mpp:createFhirReferenceWithHashedId('Patient', subject.toString())}}",
          "encounter": "{{mpp:createFhirReferenceWithHashedId('Encounter', encounter.toString())}}",
          "effectiveDateTime": "{{effective_date}}",
          "valueQuantity": "{{mpp:convertAndReturnQuantity(%labResultUnitConversion, code, value, unit).nav:orElse(utl:createFhirQuantity(value, unit))}}"
        }
      }
    }
  ]
}
